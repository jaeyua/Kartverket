@model List<GeoChanges>  // Modellen som inneholder en liste av GeoChanges, som skal vises på denne siden.
@{
    ViewData["Title"] = "Overview";  // Setter tittelen på siden til "Overview".
}

<h2>Overview of Registered Changes</h2>  @* // Tittel på visningen som beskriver oversikten. *@

<table class="table">
    @* // Definerer en HTML-tabell for å vise GeoChanges-data. *@
    <thead>
       @*  // Tabellen har en header med kolonneoverskrifter. *@
        <tr>
            <th>ID</th>  // Kolonne for ID.
            <th>GeoJSON</th>  // Kolonne for GeoJSON-data.
            <th>Description</th>  // Kolonne for beskrivelse.
        </tr>
    </thead>
    <tbody>
        @* // Her itererer vi gjennom modellen (GeoChanges) og viser hver endring i en ny rad. *@
        @foreach (var change in Model)
        {
            <tr>
                <td>@change.Id</td>  // Vist ID for endringen.
                <td>@change.GeoJson</td>  // Vist GeoJSON-data for endringen.
                <td>@change.Description</td>  // Vist beskrivelse av endringen.
            </tr>
        }
    </tbody>
</table>

<div id="map" style="height: 400px;"></div>  @* // Plassholder for kartet, med en høyde på 400px. *@

@section Scripts {
     @*  // Inkluderer nødvendige skript og stiler for kartet. *@
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />  @* // Inkluderer Leaflet CSS. *@
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>  @* // Inkluderer Leaflet JavaScript. *@

    <script>
        var map = L.map('map').setView([58.1667, 8.0000], 15);  // Initialiserer kartet og setter startposisjon og zoom-nivå.

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {  // Legger til OpenStreetMap-lagene på kartet.
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors'
        }).addTo(map);

        var changes = @Json.Serialize(Model);  // Serialiserer modellen (GeoChanges) til JSON.

        changes.forEach(function (change) {  // Itererer gjennom hver GeoChange i modellen.
            var geoJsonData = JSON.parse(change.geoJson);  // Parser GeoJSON-dataene for å bruke dem på kartet.
            L.geoJSON(geoJsonData).addTo(map);  // Legger til GeoJSON-dataene på kartet.

            var layer = L.geoJSON(geoJsonData).bindPopup(change.description);  // Lager et lag med popup for beskrivelse.
            layer.addTo(map);  // Legger til laget på kartet.
        });
    </script>
}
